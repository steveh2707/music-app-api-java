<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
        xmlns:pro="http://www.liquibase.org/xml/ns/pro"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd
        http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-latest.xsd">

    <changeSet  id="001-01"  author="stephen.hanna">
        <preConditions onFail="WARN">
            <not>
                <tableExists tableName="user"></tableExists>
            </not>
        </preConditions>
        <sql>
            create table user
            (
                user_id              int auto_increment
                    primary key,
                first_name           varchar(255)                       not null,
                last_name            varchar(255)                       not null,
                email                varchar(255)                       not null,
                password_hash        varchar(255)                       null,
                dob                  date                               not null,
                registered_timestamp datetime default CURRENT_TIMESTAMP not null,
                last_login_timestamp datetime default CURRENT_TIMESTAMP not null,
                s3_image_name        varchar(255)                       not null,
                constraint email
                    unique (email)
            );
        </sql>
    </changeSet>

    <changeSet  id="001-02"  author="stephen.hanna">
        <preConditions onFail="WARN">
            <not>
                <tableExists tableName="teacher"></tableExists>
            </not>
        </preConditions>
        <sql>
            create table teacher
            (
                teacher_id           int auto_increment
                    primary key,
                tagline              varchar(255)               not null,
                bio                  text                       not null,
                location_title       varchar(255)               not null,
                location_latitude    decimal(7, 4)              not null,
                location_longitude   decimal(7, 4)              not null,
                average_review_score double(4, 3) default 0.000 not null,
                user_id              int                        not null,
                constraint `teacher-user_id`
                    foreign key (user_id) references user (user_id)
            );
        </sql>
    </changeSet>

    <changeSet  id="001-03"  author="stephen.hanna">
        <preConditions onFail="WARN">
            <not>
                <tableExists tableName="grade"></tableExists>
            </not>
        </preConditions>
        <sql>
            create table grade
            (
                grade_id int auto_increment
                    primary key,
                name     varchar(255) not null,
                `rank`   int          not null
            );
        </sql>
    </changeSet>

    <changeSet  id="001-04"  author="stephen.hanna">
        <preConditions onFail="WARN">
            <not>
                <tableExists tableName="instrument"></tableExists>
            </not>
        </preConditions>
        <sql>
            create table instrument
            (
                instrument_id int auto_increment
                    primary key,
                name          varchar(255) not null,
                sf_symbol     varchar(255) not null,
                image_url     varchar(500) not null
            );
        </sql>
    </changeSet>

    <changeSet  id="001-05"  author="stephen.hanna">
        <preConditions onFail="WARN">
            <not>
                <tableExists tableName="teacher_instrument"></tableExists>
            </not>
        </preConditions>
        <sql>
            create table teacher_instrument
            (
                teacher_instrument_id int auto_increment
                    primary key,
                lesson_cost                  int(3) not null,
                teacher_id                   int    not null,
                grade_id                     int    not null,
                instrument_id                int    not null,
                constraint `teacher_instrument-grade_id`
                    foreign key (grade_id) references grade (grade_id),
                constraint `teacher_instrument-instrument_id`
                    foreign key (instrument_id) references instrument (instrument_id),
                constraint `teacher_instrument-teacher_id`
                    foreign key (teacher_id) references teacher (teacher_id)
            );
        </sql>
    </changeSet>

    <changeSet  id="001-06"  author="stephen.hanna">
        <preConditions onFail="WARN">
            <not>
                <tableExists tableName="chat"></tableExists>
            </not>
        </preConditions>
        <sql>
            create table chat
            (
                chat_id               int auto_increment
                    primary key,
                teacher_id            int      not null,
                student_id            int      not null,
                created_timestamp_utc datetime not null,
                constraint `chat-teacher_id`
                    foreign key (teacher_id) references teacher (teacher_id),
                constraint `chat-user_id`
                    foreign key (student_id) references user (user_id)
            );
        </sql>
    </changeSet>

    <changeSet  id="001-07"  author="stephen.hanna">
        <preConditions onFail="WARN">
            <not>
                <tableExists tableName="chat_message"></tableExists>
            </not>
        </preConditions>
        <sql>
            create table chat_message
            (
                chat_message_id   int auto_increment
                    primary key,
                message           varchar(500)         not null,
                created_timestamp datetime             not null,
                message_read      tinyint(1) default 0 not null,
                sender_id         int                  not null,
                chat_id           int                  not null,
                constraint `chat_message-chat_id`
                    foreign key (chat_id) references chat (chat_id),
                constraint `chat_message-sender_id`
                    foreign key (sender_id) references user (user_id)
            );
        </sql>
    </changeSet>

    <changeSet  id="001-08"  author="stephen.hanna">
        <preConditions onFail="WARN">
            <not>
                <tableExists tableName="favourite"></tableExists>
            </not>
        </preConditions>
        <sql>
            create table favourite
            (
                favourite_id      int auto_increment
                    primary key,
                created_timestamp datetime default CURRENT_TIMESTAMP not null,
                user_id           int                                not null,
                teacher_id        int                                not null,
                constraint `favourite-teacher_id`
                    foreign key (teacher_id) references teacher (teacher_id),
                constraint `favourite-user_id`
                    foreign key (user_id) references user (user_id)
            );
        </sql>
    </changeSet>

    <changeSet  id="001-09"  author="stephen.hanna">
        <preConditions onFail="WARN">
            <not>
                <tableExists tableName="review"></tableExists>
            </not>
        </preConditions>
        <sql>
            create table review
            (
                review_id         int auto_increment
                    primary key,
                num_stars         int                                not null,
                created_timestamp datetime default CURRENT_TIMESTAMP not null,
                details           text                               not null,
                user_id           int                                not null,
                teacher_id        int                                not null,
                grade_id          int                                null,
                instrument_id     int                                not null,
                constraint `review-grade_id`
                    foreign key (grade_id) references grade (grade_id),
                constraint `review-instrument_id`
                    foreign key (instrument_id) references instrument (instrument_id),
                constraint `review-teacher_id`
                    foreign key (teacher_id) references teacher (teacher_id),
                constraint `review-user_id`
                    foreign key (user_id) references user (user_id)
            );
        </sql>
    </changeSet>

    <changeSet  id="001-10"  author="stephen.hanna">
        <preConditions onFail="WARN">
            <not>
                <tableExists tableName="teacher_availability"></tableExists>
            </not>
        </preConditions>
        <sql>
            create table teacher_availability
            (
                teacher_availability_id int auto_increment
                    primary key,
                start_time              datetime             not null,
                end_time                datetime             not null,
                deleted                 tinyint(1) default 0 not null,
                teacher_id              int                  not null,
                constraint `teacher_availability-teacher_id`
                    foreign key (teacher_id) references teacher (teacher_id)
            );
        </sql>
    </changeSet>

    <changeSet  id="001-11"  author="stephen.hanna">
        <preConditions onFail="WARN">
            <not>
                <tableExists tableName="teacher_instrument_taught"></tableExists>
            </not>
        </preConditions>
        <sql>
            create table teacher_instrument_taught
            (
                teacher_instrument_taught_id int auto_increment
                    primary key,
                lesson_cost                  int(3) not null,
                teacher_id                   int    not null,
                grade_id                     int    not null,
                instrument_id                int    not null,
                constraint `teacher_instrument_highest_grade_teachable-grade_id`
                    foreign key (grade_id) references grade (grade_id),
                constraint `teacher_instrument_highest_grade_teachable-instrument_id`
                    foreign key (instrument_id) references instrument (instrument_id),
                constraint `teacher_instrument_highest_grade_teachable-teacher_id`
                    foreign key (teacher_id) references teacher (teacher_id)
            );
        </sql>
    </changeSet>

    <changeSet  id="001-12"  author="stephen.hanna">
        <preConditions onFail="WARN">
            <not>
                <tableExists tableName="booking"></tableExists>
            </not>
        </preConditions>
        <sql>
            create table booking
            (
                booking_id    int auto_increment
                    primary key,
                date_created  datetime   default CURRENT_TIMESTAMP not null,
                start_time    datetime                             not null,
                end_time      datetime                             not null,
                price_final   decimal(5, 2)                        not null,
                cancelled     tinyint(1) default 0                 not null,
                cancel_reason text                                 null,
                student_id    int                                  not null,
                teacher_id    int                                  not null,
                grade_id      int                                  null,
                instrument_id int                                  null,
                constraint `booking-grade_id`
                    foreign key (grade_id) references grade (grade_id),
                constraint `booking-instrument_id`
                    foreign key (instrument_id) references instrument (instrument_id),
                constraint `booking-student_id`
                    foreign key (student_id) references user (user_id),
                constraint `booking-teacher_id`
                    foreign key (teacher_id) references teacher (teacher_id)
            );
        </sql>
    </changeSet>

</databaseChangeLog>